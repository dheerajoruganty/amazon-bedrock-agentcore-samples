name: ASH Security Scan with PR Comments

on:
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: write

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v41
        with:
          files: |
            **/*.py
            **/*.js
            **/*.ts
            **/*.java
            **/*.go
            **/*.rb
            **/*.php
            **/*.cs
            **/*.cpp
            **/*.c
            **/*.h
            **/*.yaml
            **/*.yml
            **/*.json
            **/*.sh
            **/*.dockerfile
            **/Dockerfile*
            **/requirements*.txt
            **/package*.json
            **/Pipfile*
            **/pom.xml
            **/build.gradle*
            **/*.tf
            **/*.tfvars

      - name: Set up Python
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install ASH and scanner dependencies
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          pip install git+https://github.com/awslabs/automated-security-helper.git@v3.0.0
          # Install scanner tools that ASH needs
          pip install bandit>=1.7.0
          pip install semgrep>=1.125.0
          pip install detect-secrets
          pip install checkov>=3.2.0
          # Install additional scanners to reduce MISSING status
          gem install cfn-nag || echo "cfn-nag installation failed"
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin || echo "grype installation failed"
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin || echo "syft installation failed"

      - name: Create temp directory for changed files
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          mkdir -p /tmp/ash-scan
          echo "Changed files for security scan:"
          echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n'

      - name: Copy changed files to temp directory
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [ -f "$file" ]; then
              mkdir -p "/tmp/ash-scan/$(dirname "$file")"
              cp "$file" "/tmp/ash-scan/$file"
              echo "Copied for scan: $file"
            fi
          done

      - name: Run ASH scan on changed files
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          cd /tmp/ash-scan
          ash --mode local --fail-on-findings
        continue-on-error: false

      - name: Process scan results and create summary
        if: steps.changed-files.outputs.any_changed == 'true'
        id: process-results
        run: |
          SUMMARY_FILE="/tmp/pr_comment.md"
          
          echo "## Security Scan Results" > "$SUMMARY_FILE"
          echo "" >> "$SUMMARY_FILE"
          
          # Check if ASH results exist
          if [ -f "/tmp/ash-scan/.ash/ash_output/reports/ash.summary.md" ]; then
            # Filter out redundant information from ASH report
            sed -e '/^Time since scan:/d' -e '/^Report generated:/d' "/tmp/ash-scan/.ash/ash_output/reports/ash.summary.md" >> "$SUMMARY_FILE"
            echo "has_findings=true" >> $GITHUB_OUTPUT
          elif [ -d "/tmp/ash-scan/.ash" ]; then
            # Check for any findings in the output directory
            if find "/tmp/ash-scan/.ash" -name "*.json" -o -name "*.sarif" | grep -q .; then
              echo "Security scan completed with findings. Check artifacts for details." >> "$SUMMARY_FILE"
              echo "has_findings=true" >> $GITHUB_OUTPUT
            else
              echo "No security issues detected." >> "$SUMMARY_FILE"
              echo "has_findings=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "No security issues found." >> "$SUMMARY_FILE"
            echo "has_findings=false" >> $GITHUB_OUTPUT
          fi
          

      - name: Upload ASH results
        if: steps.changed-files.outputs.any_changed == 'true' && always()
        uses: actions/upload-artifact@v4
        with:
          name: ash-security-results
          path: |
            /tmp/ash-scan/.ash/
            /tmp/pr_comment.md
          retention-days: 30

      - name: Add PR comment
        if: steps.changed-files.outputs.any_changed == 'true' && always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const commentPath = '/tmp/pr_comment.md';
            
            if (fs.existsSync(commentPath)) {
              const commentBody = fs.readFileSync(commentPath, 'utf8');
              const issueNumber = context.issue.number;
              
              // Check if we already commented
              const { data: comments } = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
              });
              
              const botComment = comments.find(comment => 
                comment.user.type === 'Bot' && 
                comment.body.includes('Security Scan Results')
              );
              
              // Add commit info to the body
              const commitSha = context.payload.pull_request?.head?.sha || context.sha;
              const enhancedBody = `**Latest scan for commit:** \`${commitSha.substring(0, 7)}\`\n\n${commentBody}`;
              
              if (botComment) {
                // Update existing comment with latest scan
                await github.rest.issues.updateComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: botComment.id,
                  body: enhancedBody
                });
                console.log('Updated existing ASH security scan comment');
              } else {
                // Create new comment
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber,
                  body: enhancedBody
                });
                console.log('Created new ASH security scan comment');
              }
            }

      - name: Security scan summary
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          if [ "${{ steps.process-results.outputs.has_findings }}" = "true" ]; then
            echo "Security findings detected. Please review the results."
          else
            echo "No security issues found in the changed files."
          fi

      - name: Skip message
        if: steps.changed-files.outputs.any_changed == 'false'
        run: echo "No relevant files changed - skipping security scan"